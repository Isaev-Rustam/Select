{"version":3,"file":"./js/bundle.js","mappings":"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","sources":["webpack://webpack-test/./src/js/index.js","webpack://webpack-test/./src/js/select/select.js"],"sourcesContent":["import '../scss/style.scss';\nimport {Select} from'./select/select';\n\n\nnew Select();\n\n\n\n\n\n\n\n\n/*\nlet searchInput = document.querySelector(\"input\");\nlet listMenu = document.querySelector(\".listMenu\");\nlet wrapper = document.querySelector(\".wrapper\");\nlet cardList = {\n  Name: [],\n  Owner: [],\n  Stars: []\n}\n\nfunction clearListMenu (childs) {\n  while (childs[0]) childs[0].remove();\n}\n\nconst debounce = (fn, debounceTime) => {\n  let timer;\n  return function (...args) {\n    clearTimeout(timer);\n    timer = setTimeout (() => {\n      fn.apply(this, args);\n    }, debounceTime)\n  }\n}\n\nfunction getResults (url) {\n  if (!searchInput.value) return;\n  fetch(url)\n    .then (responce => responce.json())\n    .then (responce => {\n      clearListMenu(listMenu.children);\n      for (let i = 0; i<5; i++) {\n        if (responce.items[i]) {\n          cardList.Name[i] = responce.items[i].name;\n          cardList.Owner[i] = responce.items[i].owner.login;\n          cardList.Stars[i] = responce.items[i].stargazers_count;\n          let li = document.createElement('li');\n          li.innerText = responce.items[i].name;\n          li.id = i;\n          listMenu.appendChild(li);\n        }\n      }\n    })\n    .catch (error => console.log(`Во время выполнения запроса возникла ошибка: ${error}`))\n}\n\nconst debouncedFn = debounce(getResults, 1000);\n\nsearchInput.addEventListener(\"input\", () => {\n  const url = `https://api.github.com/search/repositories?q=${searchInput.value}`\n  debouncedFn(url)\n  if (!searchInput.value.length) {\n    clearListMenu(listMenu.children);\n  }\n})\n\nlistMenu.addEventListener(\"click\", (event) => {\n  clearListMenu(listMenu.children);\n  searchInput.value = \"\";\n  let cardListKeys = Object.keys(cardList);\n  let div = document.createElement('div');\n  div.classList.add('card')\n  if (event.target.id) {\n    wrapper.appendChild(div);\n  }\n\n  let ul = document.createElement('ul');\n  div.appendChild(ul);\n\n  cardListKeys.forEach ((el) =>{\n    let li = document.createElement('li');\n    li.innerText = `${el}: ${cardList[el][event.target.id]}`;\n    ul.appendChild(li);\n  })\n\n  let image = document.createElement('img')\n  image.src  = 'images/crossing.svg'\n  div.appendChild(image);\n\n  image.addEventListener(\"click\", (event) => {\n    image.parentElement.remove();\n  })\n})\n*/\n\n\n\n\n\n\n\n\n\n\n\n","export class Select {\n  constructor() {\n    this.data = [];\n    this.$select = document.querySelector(\".select\");\n    if (this.$select) {\n      this.#render();\n      this.#setup();\n    }\n  }\n\n  #render() {\n    this.$select.innerHTML = this.#getTemplateBody();\n  }\n\n  #getTemplateBody() {\n    return `\n      <div class=\"select__wrap\">\n        <input class=\"select__search\" type=\"text\" name=\"search\" data-type = \"input\" placeholder=\"search\" autofocus >\n        <ul class=\"select__lists\" data-type = \"drop-down\"></ul>\n        <div class=\"select__repo\" data-type = \"repo\"></div>\n      </div>`;\n  }\n\n  #setup() {\n    this.renderItems = [];\n\n    this.$search = this.$select.querySelector(\"[data-type = input]\");\n    this.$dropDown = this.$select.querySelector(\"[data-type = drop-down]\");\n    this.$repo = this.$select.querySelector(\"[data-type = repo]\");\n\n    this.inputHandler = this.inputHandler.bind(this);\n    this.$search.addEventListener(\"input\", this.#debounce(this.inputHandler, 300));\n\n    this.clickHandler = this.clickHandler.bind(this);\n    this.$select.addEventListener(\"click\", this.clickHandler);\n  }\n\n  #debounce(callback, time) {\n    let timeout = null;\n    return (...arg) => {\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(callback, time, ...arg);\n    }\n  }\n\n\n  async inputHandler(event) {\n    const value = this.$search.value.trim();\n\n    if (!value) {\n      this.#clearInput();\n      this.#clearDropDown();\n      return;\n    }\n\n    const data = await this.getData(value);\n    this.data = data;\n\n    this.#renderDropDown();\n\n  }\n\n\n  async getData(token) {\n    try {\n      const url = `https://api.github.com/search/repositories?q=${token}`;\n      const response = await fetch(url);\n      const result = await response.json();\n      const data = result.items.slice(0, 5);\n      return data\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  clickHandler(event) {\n    const target = event.target;\n    const $list = target.closest(\"LI\");\n    const $repoCloseBtn = target.closest(\"BUTTON\");\n\n    if ($repoCloseBtn) {\n      this.#removeRenderItem($repoCloseBtn);\n      this.#renderRepositories();\n      return;\n    }\n\n    if ($list && !$list.classList.contains(\"select__active\")) {\n      this.#clearInput();\n      this.#clearDropDown();\n\n      if (this.renderItems.length >= 3) return;\n\n      $list.classList.add(\"select__active\");\n      const renderObj = this.data.find(i => i.id == $list.dataset.id);\n      this.renderItems.push(renderObj);\n      this.#renderRepositories();\n      return;\n    }\n\n  }\n\n  #removeRenderItem($item) {\n    const listItems = [...this.$dropDown.children];\n    listItems.forEach(i => {\n      if (i.classList.contains(\"select__active\")) {\n        i.classList.remove(\"select__active\");\n      }\n    })\n    this.renderItems = this.renderItems.filter(i => i.id != $item.dataset.id);\n  }\n\n\n  #clearInput() {\n    this.$search.value = \"\";\n  }\n\n  #clearDropDown() {\n    this.$dropDown.innerHTML = \"\";\n  }\n\n  #renderDropDown() {\n    this.$select.classList.add(\"select--open\");\n    this.#clearDropDown()\n\n    const $listItems = [];\n\n    this.data.forEach(({id, name,}) => {\n\n      const $dropDownItem = this.#createElement(\"LI\", \"select__item\", null, {name: \"id\", id: id});\n\n      const $dropDownLink = this.#createElement(\"A\", \"select__link\", name, null);\n\n      $dropDownItem.append($dropDownLink);\n      $listItems.push($dropDownItem);\n    })\n\n    this.$dropDown.append(...$listItems);\n  }\n\n  #renderRepositories() {\n    this.$repo.innerHTML = \"\";\n    const $arItems = [];\n\n    this.renderItems.forEach(({id, name, owner: {login}, stargazers_count: star}) => {\n\n      const $repoWrap = this.#createElement(\"DIV\", \"select__repo-wrap\", null, null);\n\n      const $repoNameItem = this.#createElement(\"DIV\", \"select__repo-name\", `Name: ${name}`, null);\n\n      const $repoLoginItem = this.#createElement(\"DIV\", \"select__repo-login\", `Owner: ${login}`, null);\n\n      const $repoStarItem = this.#createElement(\"DIV\", \"select__repo-star\", `Stars: ${star}`, null);\n\n      const $repoCloseBtn = this.#createElement(\"BUTTON\", \"select__btn\", null, {name: \"id\", id: id});\n\n      $repoWrap.append($repoNameItem, $repoLoginItem, $repoStarItem, $repoCloseBtn);\n\n      $arItems.push($repoWrap)\n    })\n\n    this.$repo.append(...$arItems);\n  }\n\n  destroyEvents() {\n    this.$select.removeEventListener(\"click\", this.clickHandler);\n  }\n\n  #createElement(tagName, selector, textContent, data) {\n    const $el = document.createElement(tagName);\n    if (selector) $el.classList.add(selector);\n    if (textContent) $el.textContent = textContent;\n    if (data?.id) $el.dataset[data.name] = data.id;\n    return $el;\n  }\n\n}\n\n"],"names":["constructor","this","data","$select","document","querySelector","innerHTML","renderItems","$search","$dropDown","$repo","inputHandler","bind","addEventListener","clickHandler","callback","time","timeout","arg","clearTimeout","setTimeout","async","event","value","trim","getData","token","url","response","fetch","json","items","slice","error","console","log","target","$list","closest","$repoCloseBtn","classList","contains","length","add","renderObj","find","i","id","dataset","push","$item","children","forEach","remove","filter","$listItems","name","$dropDownItem","$dropDownLink","append","$arItems","owner","login","stargazers_count","star","$repoWrap","$repoNameItem","$repoLoginItem","$repoStarItem","destroyEvents","removeEventListener","tagName","selector","textContent","$el","createElement"],"sourceRoot":""}